slices
{
    type surfaces;
    functionObjectLibs ( "libsampling.so" );
    writeControl        adjustableRunTime;
    writeInterval       60;
    fields
    (
      U
      T
      p_rgh
    );
    interpolationScheme cellPoint;      // cell, cellPoint, cellPointCell
    surfaceFormat             vtk;


    surfaces
    (
        yNormal.5
        {
            type plane;
            planeType pointAndNormal;
            pointAndNormalDict
            {
                basePoint (0 5.001 0);
                normalVector (0 1 0);
            }
            triangulate false;
        }
        zNormal.5
        {
            type plane;
            planeType pointAndNormal;
            pointAndNormalDict
            {
                basePoint (0 0 5.001);
                normalVector (0 0 1);
            }
            triangulate false;
        }
        zNormal.60
        {
            type plane;
            planeType pointAndNormal;
            pointAndNormalDict
            {
                basePoint (0 0 60.001);
                normalVector (0 0 1);
            }
            triangulate false;
        }
        zNormal.150
        {
            type plane;
            planeType pointAndNormal;
            pointAndNormalDict
            {
                basePoint (0 0 150.001);
                normalVector (0 0 1);
            }
            triangulate false;
        }
        zNormal.240
        {
            type plane;
            planeType pointAndNormal;
            pointAndNormalDict
            {
                basePoint (0 0 240.001);
                normalVector (0 0 1);
            }
            triangulate false;
        }
        zNormal.500
        {
            type plane;
            planeType pointAndNormal;
            pointAndNormalDict
            {
                basePoint (0 0 500.001);
                normalVector (0 0 1);
            }
            triangulate false;
        }
        zNormal.5000
        {
            type plane;
            planeType pointAndNormal;
            pointAndNormalDict
            {
                basePoint (0 0 5000.001);
                normalVector (0 0 1);
            }
            triangulate false;
        }
    );
}
